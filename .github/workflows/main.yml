name: Heroku Deploy

on:
  push:
  repository_dispatch:

jobs:

  test-heroku-stuff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Heroku CLI
        run: sudo snap install --classic heroku
      - name: Login to Heroku
        run: heroku login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      - name: Setup heroku remote
        run: heroku git:remote -a planet-tracker
      - name: Push to heroku
        run: git push heroku master
  # test-submodule-update:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Pull latest changes from client repo
  #       run: |
  #         cd client
  #         git pull origin master

  start-build-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch request to client repository to build
        if: github.event.action != 'build_completed'
        run: |
          curl -X POST https://api.github.com/repos/dean-shaff/planet-tracker_client/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "start_build", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

  heroku-deploy:
    if: github.event.action == 'build_completed'
    runs-on: ubuntu-latest
    steps:
      - name: Install Heroku CLI
        run: sudo snap install --classic heroku
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull latest changes from client repo
        run: git submodule update --recursive --remote
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
          echo "::add-path::${HOME}/.poetry/bin"
      - name: Install package
        run: |
          poetry install
          poetry update
      - name: Recreate requirements.txt
        run: |
          poetry export -f requirements.txt > requirements.txt
      - name: Push requirements.txt and new client changes to Github
        run: |
          git config --global user.name '${GITHUB_ACTOR}'
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
          git status
          git add client requirements.txt
          git commit -m "update and client requirements.txt" || echo "No changes to commit"
          git push origin ${GITHUB_REF##*/} || echo "No changes to commit"
